#include<iostream>
using namespace std;

    int arr[100],n,i;

    void create() {
        cout<<"Enter the number of elements";
        cin>>n;
        cout<<"Enter Elements: ";
        for(int i=0;i<100;i++){
            cin>>arr[i];
        }

    }
    
    void display(){
        if(n==0){
            cout<<"Array is empty";
            return ;
        }
        cout<<"Array Elements: ";
        for(i=0;i<n;i++){
            cout<<arr[i];
        }
    }

    void insert() {
    int index, value;
    cout << "Enter position";
    cin >> index;
    cout << "Enter value";
    cin >> value;
     if (index < 1 || index > n+1 || n == 100) {
        cout << "Invalid position or array full!" << endl;
        return;
    }

    for (int i = n; i >= index; i--) {
        arr[i] = arr[i - 1];
    }
    arr[index - 1] = value;
    n++;
    cout << "Element inserted!" << endl;
}

void remove() {
    int pos;
    cout << "Enter position to delete (1 to " << n << "): ";
    cin >> pos;

    if (pos < 1 || pos > n) {
        cout << "Invalid position!" << endl;
        return;
    }

    for (int i = pos - 1; i < n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    n--;
    cout << "Element deleted!" << endl;
}

void linearSearch() {
    int key, flag = 0;
    cout << "Enter element to search: ";
    cin >> key;

    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            cout << "Element found at position " << i + 1 << endl;
            flag = 1;
            break;
        }
    }
    if (!flag) {
        cout << "Element not found!" << endl;
    }
}

int main() {
    int choice;
    do {
        cout << "\n——MENU——" << endl;
        cout << "1. CREATE" << endl;
        cout << "2. DISPLAY" << endl;
        cout << "3. INSERT" << endl;
        cout << "4. DELETE" << endl;
        cout << "5. LINEAR SEARCH" << endl;
        cout << "6. EXIT" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1: create(); break;
        case 2: display(); break;
        case 3: insert(); break;
        case 4: remove(); break;
        case 5: linearSearch(); break;
        case 6: cout << "Exiting..." << endl; break;
        default: cout << "Invalid choice!" << endl;
        }
    } while (choice != 6);

    return 0;
}
